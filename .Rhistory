source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
run_model = function(times=1:50) {
# Parameters
max_time = times[length(times)]
r = 2
K = 1
N = vector('numeric',length=max_time)
N[1] = 0.1
# Iterate model
for (t in 1:max_time){
N[t+1] = N[t] + r*N[t]*(1 - N[t]/K)
}
plot(N[times])
}
plot(run_model(times=40:50, r=0))
run_model = function(times=1:50, r = .4) {
# Parameters
max_time = times[length(times)]
K = 1
N = vector('numeric',length=max_time)
N[1] = 0.1
# Iterate model
for (t in 1:max_time){
N[t+1] = N[t] + r*N[t]*(1 - N[t]/K)
}
return(N[times])
}
plot(run_model(times=40:50, r=0))
for (r in seq(.2, 2, by=.2)) {
plot(run_model(times=40:50, r=r), add=T)
}
plot(run_model(times=40:50, r=0))
warnings()
?plot
plot(run_model(times=40:50, r=0))
for (r in seq(.2, 2, by=.2)) {
plot(run_model(times=40:50, r=r))
}
lines(run_model(times=40:50, r=0))
plot(run_model(times=40:50, r=0))
plot(run_model(times=40:50, r=0), type="l")
plot(run_model(times=40:50, r=r, type="l"))
for (r in seq(.2, 2, by=.2)) {
plot(run_model(times=40:50, r=r, type="l"))
}
for (r in seq(.2, 2, by=.2)) {
plot(run_model(times=40:50, r=r))
}
for (r in seq(.2, 2, by=.2)) {
plot(run_model(times=40:50, r=r), type="l")
}
plot(run_model(times=40:50, r=0), type="l")
for (r in seq(.2, 2, by=.2)) {
points(run_model(times=40:50, r=r), type="l")
}
plot(run_model(times=40:50, r=0), type="l")
for (r in seq(.2, 2, by=.2)) {
points(run_model(times=40:50, r=r), type="l")
}
for (r in seq(.2, 2, by=.2)) {
points(run_model(times=40:50, r=r))
}
plot(run_model(times=40:50, r=0))
for (r in seq(.2, 2, by=.2)) {
points(run_model(times=40:50, r=r))
}
for (r in seq(.2, 2, by=.2)) {
print(points(run_model(times=40:50, r=r)))
}
plot(run_model(times=40:50, r=0))
for (r in seq(.2, 5, by=.4)) {
plot(run_model(times=40:50, r=r))
}
plot(run_model(times=40:50, r=0), main = 0)
for (r in seq(.2, 5, by=.4)) {
plot(run_model(times=40:50, r=r), main = r)
}
plot(run_model(times=40:50, r=0), main = 0)
for (r in seq(.2, 5, by=.4)) {
plot(run_model(times=40:50, r=r), main = r, ylim=c(0, 10))
}
run_model = function(times=1:50, r = .4) {
# Parameters
max_time = times[length(times)]
K = 1
N = vector('numeric',length=max_time)
N[1] = 0.1
# Iterate model
for (t in 1:max_time){
N[t+1] = N[t] + r*N[t]*(1 - N[t]/K)
}
if (N[max_time] == Inf) {
print(paste("model diverged for r=", r))
}
return(N[times])
}
plot(run_model(times=40:50, r=0), main = 0)
for (r in seq(.2, 5, by=.4)) {
plot(run_model(times=40:50, r=r), main = r)
}
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
for (r in seq(.2, 5, by=.4)) {
print(length(run_model(times=40:50, r=r)))
points(run_model(times=40:50, r=r), 1:, main = r, ylim=c(0,2), xlim=c(0, 10))
}
for (r in seq(.2, 5, by=.4)) {
print(length(run_model(times=40:50, r=r)))
points(run_model(times=40:50, r=r), 1:10, main = r, ylim=c(0,2), xlim=c(0, 10))
}
for (r in seq(.2, 5, by=.4)) {
print(length(run_model(times=40:50, r=r)))
points(run_model(times=40:50, r=r), 0:10, main = r, ylim=c(0,2), xlim=c(0, 10))
}
for (r in seq(.2, 5, by=.4)) {
print(length(run_model(times=40:50, r=r)))
points(run_model(times=40:50, r=r), 0:11, main = r, ylim=c(0,2), xlim=c(0, 10))
}
plot(run_model(times=40:50, r=0), main = 0)
for (r in seq(.2, 5, by=.4)) {
print(length(run_model(times=40:50, r=r)))
points(x-0:10, y=run_model(times=40:50, r=r), main = r, ylim=c(0,2), xlim=c(0, 10))
}
for (r in seq(.2, 5, by=.4)) {
print(length(run_model(times=40:50, r=r)))
points(x=0:10, y=run_model(times=40:50, r=r), main = r, ylim=c(0,2), xlim=c(0, 10))
}
plot(run_model(times=40:50, r=0), main = 0)
for (r in seq(.2, 5, by=.4)) {
points(x=0:10, y=run_model(times=40:50, r=r), main = r, ylim=c(0,2), xlim=c(0, 10))
}
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
plot(run_model(times=40:50), ylim=c(0,2), xlim=c(0, 10))
for (r in seq(.2, 5, by=.4)) {
points(x=seq(0, 11), y=run_model(times=40:50, r=r))
}
for (r in seq(.2, 5, by=.4)) {
points(x=seq(0, 10), y=run_model(times=40:50, r=r))
}
for (r in seq(.2, 5, by=.4)) {
curve(x=seq(0, 10), y=run_model(times=40:50, r=r))
}
plot(run_model(times=40:50), ylim=c(0,2), xlim=c(0, 10), type="l")
for (r in seq(.2, 5, by=.4)) {
points(x=seq(0, 10), y=run_model(times=40:50, r=r))
}
for (r in seq(.2, 5, by=.4)) {
curves(x=seq(0, 10), y=run_model(times=40:50, r=r))
}
curve(x=seq(0, 10), y=run_model(times=40:50, r=r))
plot(x=0, y=run_model(times=40:50), ylim=c(0,2), xlim=c(0, 10), type="l")
plot(x=rep(0, 11), y=run_model(times=40:50), ylim=c(0,2), xlim=c(0, 10))
for (r in seq(.2, 5, by=.4)) {
points(x=rep(r, 11), y=run_model(times=40:50, r=r))
}
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
source('~/phd/quantreasoning/hw1.R', echo=TRUE)
